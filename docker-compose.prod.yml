version: "3.8"

services:
  web:
    build: backend/
    command: gunicorn hello_django.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - "8000"
    env_file:
      - ./backend/env/.env.prod
    depends_on:
      - db

  nginx:
    build: nginx/
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - "80:80"
    depends_on:
      - web

  db:
    image: postgres:12
    restart: always
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hello_django_prod
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    env_file:
      - ./backend/env/.env.prod.pg-admin
    environment:
      - PGADMIN_CONFIG_LOGIN_BANNER="Authorisedusers"
    ports:
      - "5050:80"
    restart: always

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9999:8080"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  node-exporter:
    image: prom/node-exporter:v1.2.2
    expose:
      - "9100"

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    environment:
      - NGINX_SCRAPE_URI=http://nginx:80/metrics
    expose:
      - "9913"
    depends_on:
      - nginx

  # mongodb:
  #   image: mongo
  #   ports:
  #     - "27017:27017"
  #   env_file:
  #     - .env.mongo
  #   restart: always

  # mongodb-express:
  #   image: mongo-express
  #   ports:
  #     - "8081:8081"
  #   restart: always
  #   env_file:
  #     - .env.mongo
  #   depends_on:
  #     - mongodb

  # node-app:
  #   build:
  #     context: node-mongo/
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - ./node-mongo/.env.server
  #   depends_on:
  #     - mongodb


volumes:
  postgres_data_prod:
  static_volume:
