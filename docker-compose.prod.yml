version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: gunicorn hello_django.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - "8000"
    env_file:
      - ./.env.prod
    depends_on:
      - db

  nginx:
    build: nginx/
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - "80:80"
    depends_on:
      - web

  db:
    image: postgres:12
    restart: always
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=hello_django_prod
    expose:
      - "5432"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    env_file:
      - ./.env.prod.pg-admin
    ports:
      - "5050:80"
    restart: always

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9999:8080"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  node-exporter:
    image: prom/node-exporter:v1.2.2
    ports:
      - "9100:9100"

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter
    environment:
      - NGINX_SCRAPE_URI=http://nginx:80/metrics
    ports:
      - "9913:9913"
    depends_on:
      - nginx

  # vector:
  #   image: timberio/vector:0.32.1-alpine
  #   container_name: vector
  #   volumes:
  #     - .\vector\vector.toml:/etc/vector/vector.toml:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - nginx
volumes:
  postgres_data_prod:
  static_volume:
