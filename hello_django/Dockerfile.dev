###########
# BUILDER 1 #
###########
# pull official base image
FROM krallin/ubuntu-tini:trusty as tini

###########
# BUILDER 2 #
###########
# pull official base image
FROM python:3.11.4-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# install system dependencies for the shell script
RUN apt-get update && apt-get install -y netcat && \
    apt-get install -y --no-install-recommends gcc

# install python dependencies
RUN pip install --upgrade pip
RUN pip install flake8==6.0.0
COPY ./requirements.txt  /usr/src/app/

RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########


# pull official base image
FROM python:3.11.4-slim-buster
# Copy tini package
COPY --from=tini /usr/local/bin/tini /usr/local/bin/tini
# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*
RUN apt-get update && apt-get install -y tree && tree .
RUN chown -R app:app $APP_HOME

COPY . .

# Optionally, copy the entrypoint file to a dedicated location in the container
COPY ./entrypoint/entrypoint.sh $APP_HOME/entrypoint.sh

# Debug: print files and working dir
RUN find . -type f && pwd

# Fix Windows line endings and set executable permission on the copied entrypoint
RUN sed -i 's/\r//g' $APP_HOME/entrypoint.sh
RUN chmod +x $APP_HOME/entrypoint.sh

# change to the app user
USER app

# run entrypoint.sh from the canonical location
ENTRYPOINT ["/home/app/web/entrypoint.sh"]